{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","window","addEventListener","className","icon","faChevronDown","size","repeat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8NAsHeA,MAjHf,WAuBE,OAhBAC,OAAOC,iBAAiB,UAAU,eAiBhC,yBAAKC,UAAU,QACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,cAAd,4BAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,sBAEjB,yBAAKA,UAAU,eACb,0CACA,kBAAC,IAAD,CACEC,KAAMC,IACNF,UAAU,oBACVG,KAAK,SAIX,yBAAKH,UAAU,qBACb,wBAAIA,UAAU,sBAAd,uBACA,yBAAKA,UAAU,oDACf,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,SAASI,OAAO,OAG9C,yBAAKJ,UAAU,qBACb,wBAAIA,UAAU,cAAd,6BACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,aAAaI,OAAO,OAGlD,yBAAKJ,UAAU,qBACb,wBAAIA,UAAU,cAAd,4BACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,UAAUI,OAAO,OAG/C,yBAAKJ,UAAU,qBACb,wBAAIA,UAAU,cAAc,uBAC5B,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,OAAOI,OAAO,OAG5C,yBAAKJ,UAAU,qBACb,wBAAIA,UAAU,cAAd,mBACA,yBAAKA,UAAU,oDACf,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,OAAOI,OAAO,OAG5C,yBAAKJ,UAAU,qBACb,wBAAIA,UAAU,cAAd,8BACA,yBAAKA,UAAU,oDACf,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,QAAQI,OAAO,OAG7C,yBAAKJ,UAAU,qBACb,wBAAIA,UAAU,cAAd,6BACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,aAAaI,OAAO,OAGlD,yBAAKJ,UAAU,qBACb,wBAAIA,UAAU,cAAd,wBACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,QAAQI,OAAO,OAG7C,yBAAKJ,UAAU,sBACb,yBAAKA,UAAU,sDACf,wBAAIA,UAAU,cAAd,wCACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,SAASI,OAAO,OAG9C,yBAAKJ,UAAU,sBACb,wBAAIA,UAAU,cAAd,gCACA,yBAAKA,UAAU,sDACf,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,WAAW,QAAQI,OAAO,OAG7C,yBAAKJ,UAAU,sBACb,wBAAIA,UAAU,cAAd,WCpGYK,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.d6bec069.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\n\nfunction App() {\n  const parallax = (element, distance, speed, direction = \"Y\") => {\n    const item = document.querySelector(element);\n\n    item.style.transform = `translate${direction}(${distance * speed}px)`;\n  };\n\n  window.addEventListener(\"scroll\", () => {\n    // parallax(\".section-1\", window.scrollY, 1);\n    // parallax(\".section-1-bg\", window.scrollY, 1.5);\n  });\n\n  // useEffect(() => {\n  //   const sections = document.querySelectorAll(\".section\");\n  //   console.log(sections);\n\n  //   sections.forEach((section) => {\n  //     // console.log(window.innerWidth);\n  //     section.style.height = `${window.innerHeight}px`;\n  //     section.style.width = `${window.innerWidth}px`;\n  //   });\n  // }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"section section-1\">\n        <div className=\"title-1\">\n          <h1 className=\"main-title\">Happy Birthday Katia!!!</h1>\n        </div>\n        <div className=\"section-1-bg\">\n          <div className=\"section-1-bg-img\"></div>\n        </div>\n        <div className=\"scroll-down\">\n          <p>Scroll down</p>\n          <FontAwesomeIcon\n            icon={faChevronDown}\n            className=\"scroll-down-arrow\"\n            size=\"2x\"\n          />\n        </div>\n      </div>\n      <div className=\"section section-2\">\n        <h1 className=\"main-title title-2\">My beautiful Katia,</h1>\n        <div className=\"section-image section-2-image section-2-image-1\"></div>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"Katia \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-3\">\n        <h1 className=\"main-title\">On this very special day,</h1>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"special   \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-4\">\n        <h1 className=\"main-title\">I would like to wish you</h1>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"wish   \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-5\">\n        <h1 className=\"main-title\">{\"All the happiness))\"}</h1>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"joy \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-6\">\n        <h1 className=\"main-title\">Fun Experiences</h1>\n        <div className=\"section-image section-6-image section-6-image-1\"></div>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"fun \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-7\">\n        <h1 className=\"main-title\">And love in the multiverse</h1>\n        <div className=\"section-image section-7-image section-7-image-1\"></div>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"love \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-8\">\n        <h1 className=\"main-title\">Also, I want to thank you</h1>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"thank you \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-9\">\n        <h1 className=\"main-title\">for being in my life</h1>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"life \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-10\">\n        <div className=\"section-image section-10-image section-10-image-1\"></div>\n        <h1 className=\"main-title\">I'm the luckiest guy in the world!!!</h1>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"lucky \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-11\">\n        <h1 className=\"main-title\">Love you more than anything,</h1>\n        <div className=\"section-image section-11-image section-11-image-1\"></div>\n        <div className=\"section-bg-container\">\n          <div className=\"word-bg\">{\"love \".repeat(50)}</div>\n        </div>\n      </div>\n      <div className=\"section section-12\">\n        <h1 className=\"main-title\">Idan</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}